Реализовать конвертер трейдерских сделок:

class StrategyDeal:
def __init__(self, bank, entry, targets, close):
pass

    def get_targets(self):
        # вернуть список таргетов в виде числовых значений float [21.5, 22.8, 23.5]
        pass 

    def get_target_percents(self):
        # вернуть список процентов, как в примере, округленные до 3 знака [6.912, 13.376, 16.857]
        pass

    def get_target_banks(self):	
        # список значений банков, если продавать активы по таргетам, как в пример, округленные до 3 знака [1069.12, 1133.764, 1168.573]
        pass

    def __str__(self):
        # текстовое представление сделки
        pass

def read_data(file_name):
pass

def write_data(file_name, data):
pass

def parse_data():
pass

def main():
# content = read_data('deals.txt')
# result = content
# write_data('out.txt', result)

if __name__ == '__main__':    
main()

# INPUT FILE deal.txt:

Bank: 1000USD

Entry: 20.11483USD

Target: 21.5432423USD; 22.864732843USD; 23.556789USD

Close: 19.093022USD

# OUTPUT FILE out.txt:

BANK: 1000.0
START_PRICE: 20.11483
STOP_PRICE: 19.093022

1 target: 21.5432423
Percent: 7.101% # процент рассчитывается, как отношение таргета к цене входа: 21.5 / 20.11 и округляется до 3 знака
Bank: 1071.01 # величина банка, если мы продадим все активы по цене первого таргета: 1000 * 7.101 и округляется до 3
знака

2 target: 22.864732843
Percent: 13.376% # процент рассчитывается, как отношение таргета к цене входа: 22.8 / 20.11 и округляется до 3 знака
Bank: 1133.764

3 target: 23.5 # процент рассчитывается, как отношение таргета к цене входа: 23.5 / 20.11 и округляется до 3 знака
Percent: 16.857%
Bank: 1168.573

-----

BANK: 50.0
START_PRICE: 3.0
STOP_PRICE: 2.8

1 target: 3.105
Percent: 3.5%
Bank: 51.75

2 target: 3.27
Percent: 9.0%
Bank: 54.5

3 target: 3.4
Percent: 13.333%
Bank: 56.667
